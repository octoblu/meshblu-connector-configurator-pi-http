branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - |
      meshblu-connector-pkger \
      && meshblu-connector-installer-macos --destination-path=/Library/MeshbluConnectors/configurators/pi-http \
      && meshblu-connector-uploader-github
env:
  global:
  - secure: OU4rwvQY6Yrbuo+aSvDhJylwv3sRazD6KQEDZ+m4Qlqfz3FFilTnVgn20wh+FYG4OVfTOouK82xOTwaOmQVGWGi5EP4m1aijxZg2hP0vijXst2SenKDHQjx3hw67RqJuDEW86ReqdRTBtJLO2SlFw2x3Sdt7qz0BxlQBE4249rvK1j3Mdf0AcV70e90//L6+/bA4UxNFVZx8Uc2Qo9oke+3a0GqccycoI8szYJv6/cwUJh3XgdLR+TmQbrPbLFIC9+FemBIE8GrAauCwdr2lYgOZEv7q6FXC69WIwGU2covdE58kLI6CnFSmGl13DIBZra12HTqkb+xdkgrR5vTQdkMtMCU0vrindVv7JpK1e9Buxq+J27OKDAV8Kd9PGFbdun4J6qgFvVoL1DcacA9YH9H9CSRNIxA1MVfxM9ioVp+H49bYH/z7oZ/MlTXS3smwyZTFN1iE+EHg8bvk0DMj5r3pmxUfa23N+JZYnfqgimrtZjzHG49E/7fnfZ5brv/EOXzWr/OKTbDN8lK4GLFtXtnqfWhbCblnzOfqMJLDuyahxsxCgF4cyUA6sg1b4KB1CyX1pKVtaI89jd/CrbQ/ykC36b0lKnY3o4Ug5uc6q7kixdzTQaukCJuqkEFIcVU1daDbkck8jlC67dQ9tvPJre+F76pVZyeYEPeqMjdD2Qo=
  - secure: bsc++pf7S2oLKiAfsI9NxjhFRTOp/rE5qIsGRdoT0t6hLXN1WzVRIyPe/Zbs5bVjoiRjLKb1ayZPQba7aWbxCpwvMMzinuip2l06VJAaWNC5Sqkglp4W994WhkwtkQe0HMzRs6saXUq3daQG5gtcgbIq2R2lJ/VxlRib9L5Hb9ugs5ZNiDDJ2FpBq+waLbAvwIlR9sak0Aw3aKWpW7KMY3mWNVksU/fZggjpLgHcqgRP7+iCgzJY1tfmH3b2cT7hk3oLeE6fs5AcCG7e+bluJJ/vFaOAyGQgBN2KSm5j91RtoIB21j5ppAiMar+DwT9rko0GSjUX2jBEZdVIVhivr6f8RcUdAOxFQ05SPMpkbpCM0+4KD8a6PmPMeCskj2FtZgcuMsaiDeAGLe78HlEzvIDv8CaSAIIzZ5SPJwLS8nhMTcTZnrPUz9EXHGHzRurUULHl0sOQYXMrQgjmfyIiUSw4Vna5inlytEc64QoHxm5HKDR6wjAllL5KRJaF31hXzMeSDb6wPOqqCdJyvOYPFuSFH1JsNkMmACgp/Q2ogDUUkD8rtWf219QxIrLdJu7XYa+q9C6PDZ96aplzKrYEGgj9Plyyu7HwmsY0IH3msDFC4OdUNo+O4oBuIJo5BeeklZZLMxB00tEYWb3aUYJkj61eXSZRanAYELqN4tGlthw=
  - secure: w10o8dD9NwRoGcZahHYxvY4yQWcAto8YrMGddwt6vHK4VfECI+HH4+M4Gbjrv8pIu+lWGXeMqAJf/NEZVUeKYKuTU0NXdUBYI/CouukjOxXjgOEv0NV5scg1LyFoMx7V60kWgIxMxDfeYZk06ZYGPbvgf/NXcIopm3m5m06TuY7FEdlB9n8/sQltSaH5twAl272HsCXZVUQZCJ6wI/Nx/UA9Kmp4l4c9HwwlvzlJ7Yi4sApZUkeaR2hV65HIt9p3bcEJNP9kj2NicfJv9pz3yBbUK4xizgIzSETGaV/DRyrEyL/0ru8hWAIVogRWDP6f1jyBRvkxeYQB303F8U6YL7UTSJhpuYqUpBFheP3emf2YDo0unof6VFetYqqYy/mqGjYZ6NZ2BQ9uMoSGAw6uEX9y4CE2UqsK1olLjDEUvvsBskBiddJdZYjlnBheTKjearb2fe8YoUZtsg8P087zDFe7VekzBTGFFgsEmN7dxKYS0AfgzMrMYU+OzWHLn+9J4k49kgGBtqL0QLCnTHn/mGU35cucF/2kzP+sOxrDdLLpYcKZ+fX9PnrGVfVAYenRFCsQECb17FjkQxkWusHu7b4WrE/vhm+tY+XNABRgOt0IcLeGdh6b0gfKXmH5SU50+vNhk4BfG77WlcRW30gIz8lv9vCNURr9By6ScwcpcIg=
  - secure: o4i1bU7OWQIxvbrnqdUOaXNhbQlF0c1BjKqIjoc8ipKaDQ5P9TAmkTyfM3t4R5gD73T9+ZQC5Egz9bKiAWYM7JOl1KZRh6GQ0O3a4U3lDRRGftvQufD227uR7VG1kyGwgEuFlSJRIPVsfyaGeAZIzJpwIPGm7dHNt9IqRYvKKR2Bj2s1m8VK74eyYuL0Z/S/O/dt4D1+J1V47dTlilQdH4/kto9b34hAfDUk4+PxH0BgVJgD0ZXNmiPIOSkhSWunaUjt7Y/cDlkBPBl+1w7UBG1Rs2Tg3Q1lFGjQRU1qDr9xIXIkBLDrB5YzuHMzBEcL5wN/Ny+AbK3DjwqhVJvxTxj2Q/lgINxyXyYt9qikamD95PuQeP7iQLvyQtVPnYV/0PJmjQEb/K+bU0mGz2knNKZMi0sRImkku126JU6A9G7LqGilqMUvTwamd7NwY8P/zWyRs8ale8EMiCmnd9v0Tg10Up4dXFlRMEn+M4udRwPzDeveiyBi1kdQiUg4BLYeEoJDyCawHokjpWzR0ewjra/ju8a5Z9h7+c+cyoFXXfvbNF14QlHpyhewXhPTzDZs84Cis1ejTgJ+onYUv86SsKzZ/biZugpCVk0wYyB+ch2+NXNgOa6ZCNOtR1Pph+jR23TxBGYnPaRsP3h41pE9CXtNlcJ+o8rW+pWp53zyCdU=
  - secure: DMTjzsLnB/lUiR3icvcPcB5jXqtOz8iqe1KaaQtQ5f0JpXHTKDrZqdYBLXcb9b8CEKwqjpJJaeSzxiwex4Ht6/NJFXr4PqyaZT0IYveABQcTVamKz3x2Aj0JBxtBhbKhYi4SeYaw+khCeTB9n8BFjDHtT8ONqnX6sjuiIIDvKgwiDSazmr9tRAYo2qJ0Mb9DtDiHMzZO7xBzzDoL8DuweMNRn5zjT//e7v8w/ctGzQVny9DE/HZ56YC/mmB7IO04Ox1rONU86BxECtKIl7n8TWiTP2Jl2ElqYRhiK9RoJ6T8TYrHurQTlHiNK2Wh4kABZiWaLtNB1ktN/aZ2cOEMnZZ2q5OZeyfnuT4TnM4VqdWZm0jtoFnT2m9Ld1AhlH/WSGjUaf2bY/SSLt17xy/Xqyc0kc6DBAuDIi4nDyNKnF+Kw6NqkbCcp90dytCRSMcxFq0ufd6uoYbccoE2sgwJsV86k8KE+7F6uauiW43jzC1BsTofMIRlre6aO1AKTajkt4YFEWQJKcBNwO3GAT3aLkkWTmnpdLBRDZGsIn/Fle9Zr8sv9H+bbD1B1i2m4mJBnALwlnSwSC0DlA0aEV8zvrTfmJOztJynrn7rF6wpaUX1wJWdnErBRqXu2XYP1ySf54oqnSXZyvVCQ0dXYkLUIs/a8qdBCK0cClsJMHiqT9w=
  - secure: viAQ2FOFCqmiIzmuWFTneD0FY+lND7sg/OTdYhGBvFwQUxXWSky7zd80Zf9UAXpXRRzETKKspyhXvyi4CzoVS3BrkTqYQKDx0zqovGSzoNc4C+3oUeRfiVahTQb4ZXbr+iwUH4vpqEk1ykBEsGrVl30VfI7zh07uevNxABJr1kaZkCpKVlj/3IMJbeIgNupu7bqpGDfUl79QTeNQuOvE6pgIVJKLprni+OYyFzxkMwnUbgmNuPE6TKFLfrs5cX9SFzHJaGqnuIiwPN7j1ZHJTRfwcqZlfI9Qy8HcUQswnra2GidrMms7cValF9heZjxzsF3yPsb7xbFoB2TAMUv0+AvwaKQSn81T1CIi2C8qMJ5Q1gADTlnm9dQYH1H86X3PRM3zQmPmgWeLXjHsqpkwIPSxqrksOS0gh40DqjAaCHgLV2FssQgc2ygaHqaZgvnz1yOZa/JMBvt0qR1Yn5yEPtwaXf+NzrsNVYuhezmeb3bxqzMlDa7xFv6Yy7+tQ2d/Gz1vWHkzi1g6jPVsRLEl12KKgioLCCdOcsYhZnPSyFOAYnFz7YLESJBZpuroJXrNx2UGS+cDIFAz5JWsC981LAae+c5H/7a+YUnXD9R13lyMgXMGMNHa1Dr7NBLkusxm1Zcz9J9EVagdfjPyYjjs/mvw8zqnLjSOk+ePcmN5ss8=
  - secure: RdbXvLBE2YSwlk7bwhYgK0HXruvuEDRdFbH0YuxsWsufwTjro7wz84wE2Sfx4eLKK3Jcl6M004V4WneymScXDy4CiLi6AXYswKIGH/OJKh7ZdpXlZ1JEuBZGfFsY7KY2E4VOlg/Fq0CEsefHzGOxsc/a6kAQru3xFKdIPnHH3nvDZKHBrKS4X/3iQ3qQGJ1E7WbmhLKjEKOKVHc6JaPDOAJV0Zp1y4+MjrKI7e7MBQFOhmUMjZmq/0lPGQA9Ec7U/EcCXQKL4lxQk+OkbqdXiECnzHIghcwk2Vnj87xBHlC7RrmAqEjoy87ja+1GQOYPMLOYB3UJeG/NMq3yCUzZosex+/1BYdY4mumDeRHtCcC5M7Fp7lgKVwB+HHO4HoS8XJRcDTIvC1tanqyp5HTbrAR5RZlpT4N2OltOWTjLCojc7/MxrqEvQ1/KPtuem9NpsI3NQ/0+tlKAW+Wd4IK2k6Z6n9d4+ht5IP7grZOdI5IEkNJCirZ7WLZ47A8cmoYlwtxvZJJRp+9P3d1hwY5PqRaESR4h5vTX7ez6oVztCPw6D/kTxMTxzdhmS50Jpb80ikmEpnpHMWCw/vpZKuJgIQZqd4KwOU2KqqV1x9zyiHRnZ1J7MWCyVYBIbPvvcchpoDlNbmgjK+NiTmtmOs+xlFDqVveWyUU6Cb90zwOts48=
  - secure: RDGx5zleDkKk2vWaFiHJbPfi/CIiiZvXyp1pvLC2PQFwCx/NN1Tr46vSG0zA43uDTe46wNdpoKfJhm5u7GTtT/lbQwmNxxMco+qykALKcFDXV8Lsg+REIQAmF58S65oJE6b8F/XPH9B6y7i0TkTikTxgC+y1BBJ4T4MGKlX96ZEhZrcRoJg15vQlVX6e9/h2h6AQKL7NMnIzH7GlVGUAz5werERGyOA7LOfqLAyOcvMMI6NGcvaHngBusLy2d0+5aOMl0BRh/9ZXkqvVAhBPy2tTk56Hrynest71z+HI8ei3sodPpszoZWAoqVPvIOP41S4Z7iUc9SaCMOazNph1s7MjXY+Z84Tm8JJNMwEqwDGnEjMZAwvwpInLBghqf57oG5ch6ENAh5slgQAkc9xatGkkpHwUbvXZQNSQcWp0YD9VgXa2IhzABHSDxoOygCI3HINU73WmhrmAxlCcOqigbssNnv/dH+H30US0NaEuwYd32ldYuXAif1iLS+BJ3HUocPzMzuBRJVSjwTThkMVoRQSlh7FV8s8CZ2BpVOf4DaWLhgI8mFAVgFn+7TXfS4/YtvlZtZGVIm8naUIK44PmM+vtrjtDejEvTqBvkYdxQYuFqToXkleOJqM05aBNXqe+YeWlsNraoC0dTyS06gDinUJyEk+wBc3d40VgjULLNdA=
