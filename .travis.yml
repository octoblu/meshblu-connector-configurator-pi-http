branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - |
      meshblu-connector-pkger \
      && meshblu-connector-installer-macos --destination-path=/Library/MeshbluConnectors/configurators/meshblu-json \
      && meshblu-connector-uploader-github
env:
  global:
  - secure: KUGLa3gx1j9WahICcBH67r54qZoC0BUOiLVucOD6WKbWArhyGXTSLMsa9mMzNL6BahXxPC6/6g7SleJRrKsa2ur/N6MPdYwiMWKrocXtktltsOhi5prS4pFVbe3OrA9yUIfQHOxHvmksjL5UCa/E9z/WI8jh0dAlH5961seg9bSB09JkWKhG23mdruAlKZvlJ509OX6Jiigkfdnz15myvYxrMXRZuI81EVtY0sYcASez8T/hUhYAeJe8XlG3Fr1Xei0NMCkYMdr96uxYppy1zZpE4xxsSa/JDBgCaGbhgNmWzm1hRRC5DGyKFgpSNzrrZXwLdn7lQNW8hqeyyNr2oQgaKNNbO62GkFbKVAAkgE0gyZ+FqHFuYQJ9qycRedxtSFvmW60AGr0IVRO7fwpDjiKmxihKhJwEuM5ePt7ZE29BdZGOrb6+h8k6PPA7Ch3xHFwHMQl+hp23vCDR4KHiquDEBMVN+E3SRWFAlC8KMsalorB6DKm4/DOn1yJpahyT2BiPBY4W+TdOGpMSMcxywd/o1J8A2av4krZtTwDSWpxhpuxFBE8pHOwtIS1u2Q37TxneSdccQHiDM08A9PvXzenBq1TQTgbTKVyH8fz1mzwoGYcY6vZL6dEeiK/GNQ+n/gk6NR5p9jh9W1YKNatefbCMXNoqmEUlolj3LU/9kxw=
  - secure: JuT9V1eoyJdD6FQjWrbxWw8KksVLrEi/xMXeEjz0ORzOB62cUeRJlG7hXwXeeF1+2qcqATBnNjfdjiOJn+svC5PW9h0sgWljIFQQVvE5VgfY7Xxn3z8FgCLWkMY2lj6YrXAvTylh4cLWGn613r6XX50RUSr6FMaPw95Ggt/05TN7rYc0KPViFCP63JMoih97zFsd1eR4kjU+UCuvlwrj+uEMWLG0VN/JveQLe+C1WvNE6vh9mdyYq7DIAHOy/xD+xk0xTREmY/PeHaV//mWcA4KFC38BEVsXNQKYX8oefFqpS/BsR8TOzyYfaBgQzuia0cxcGkSllTXb8+K/vx/FVqQnjxyC/PjQP6ybc4wE6KLJVJE87+zjTuI46lf9hm6Iev1UUNop5pLOwSiNoPO4f9TDaDby+NkhlJM+TKMk9F/AhjwkjMlU5PlS80VfwGbFHG17gsyd0Emcmi+JwB4Xy9UUeszJOocZYzhK3qtHp6XE5NWr4wHyQgddZDGpdrGcf+AQcBTOivtqRuyIlUtgADK61dYT2zxNz50YDEjHxwWT8zH1pxYSyFoBA6FWHsuMswQ8LFyiHLH0WAWHuErPokAd1mAEeaos87rDobUCmk13k4XoFbx0OCc7V+sSbGni1gBbAzj/OQ+GB89M/JTfMG4GuUlKmOBiKbzlVzxhpwc=
  - secure: JZ6Z45M8pB3i9WkLWukN9qTMe5qfsNTjbEuYxTAuNovN/gzuNew8RncIdoCFV07hG8jmEIgRefGUK2qsqFH3wWpE5s8g5DuhmmHuq0k7eryVRUDJ8rndeujqAZciXgkLzQLZeqeoYFRbF2olWOrrBUrJwhZF4CKwD9Kv+8sG0lI9zwbFb54SvnnJnWqzK3+XLksJJbJYbWU3lsFE50HBGz41nCKo0H0U55kgeUXOD5CXZ12goZfl6DPaK4o7D7xU+XaJ67JTvEHka73b2K+mRCxKErQteJESMp/uWvyP2P13Zv+26CcvVxiQu++YWiyHzQa2fXIQA9WhINjbEeN5mcEJgSDLagvEu88ldbdr6HiWBp+iFjUSLF/T+Kb6QoZm53HpzM0phYT/ywktY5oVQIL04fp/erHLUvXQ/oMEvrOtJNP2CXQpUWM2iMIQ9kz7fPm9YJZk69FHK80vnERMXhKaOUDBIHtU77tTra3Aq82ALM2EbCwLrtPCAHhLemeftJcCPeX7eKHiLfdh8u3hpKovPUd880iIrRx+i8tho1kxGMo/IwWzOEn4GHkErcRc09appU4QhbbVyXuTiExElqOeUBQLtmeax7DOpBgWiO8b4h44W5P6WENLPVvOEVDb9o0JKFJFoQJ2m4nDZLAQNxTcgso/xN7jPp7EcxMAp1A=
  - secure: onmLAVyhGcke0U1wIQrY8gb50xwKZhLaG7kV71ZOE5AM22/Ef/u+0NlTG4Dr4k/zdjf2MjYfJU7NYhgatxSvICYSpoF692YlnP/Y7kh5Z325SJWJoztpUsjeuiJzHOljVnXn+olLgNv+bV8DjZmZcOJ9jBmG4Svamvr+WAYFUn9w4c/HTlLOjpdyJZzz5YGvIoapPLC6aD+hz155NIryve12bf54DQmvvUdsSt9pN0HvNkEEhwZtimA5F+G5o+BkwqEmiiSgwl2qPbLF9XN4cCNsLrvpcsP54WXMmDTvR/YEbv1q+kzcaPvTf/D22xEvRuea+eiO/NMWfQFeLbGF+IXWpw2Uc8a4Jpk5UkS8ZvgyU6flvQX4ur7DsyKQ2zex3GLnXquk0GyTxoSo13rhU6KbPe92Q9O2TUf+hQ6BwvgwGyIjItJ+poZaL8K8u5lIjMdeIzbK/OoDBpZULEBlDxhAyhiMY3EfLuLIoHOcacKio2vbNNh2VaSV4JAl+okMfnCNVlu6LOariKd3TuxN3lD1fyeUap/1Aq/m8BTCQ+DbJDMNzjNNYrMAj/+iTOxuKF5m7lBP77AE805XWeh6Y080Z2pxRuFbW0RJLFiKMN3TX7zdtyBb9O/UM2NPYnIXH9UgAFwatgJXfdylTYtCZDEX5ctdAVhW+T9WyGluWgM=
  - secure: 01EFZ6GImerhyGcVjnqNvM5iUSfXTfwDnJLDDcEyZfP303eE6y1Q5YzymECAN+p/aok/wd4+dUJGGtkIKKT7jBUObUFWu94ZOuvGiBsLdFOOMxr7iO/GtSoObDjU4eCse0p/DjhFj+H8Yq7oColxVemLjRB6YYQwr5jb2YbH2onW2nptvdJbFC0QgMM7/9esJP2WwVwJ/VkehNvVLX6kgKkaWUeIN6SiC3poiLb0cVlcRq4aUeld9uXBREcbogfmqt06JOPERcixKKL5T6AVmfA+42UBe9sHKmuOy0LEYtDDDmk4UO6YEuCWCXwd2bPnL7xAEMjhN4B+EQ1B+dLPVz+/LKAlMnbK/EhppP2/YblbnA40Q7wCQtUjHzoCQ3qQthBamra65ySoEW9Z9hMfIppBirpNUVdmRdO1lSikTpbUjNly2lnqHc2dN/YOJWZYHC6xiAedUiE5elMQ7T19vPCkAtZhDwoJvnfcnrpuCisbYmdVsunKAe9ug5+wKtUEFvt0UKo9BGMEsgWo/ng9/3bdhZBwt7XPzvLFWNiTeorh9ZIWGZiF/U9BE1VTETunczd0XBf/izljxjwtBQD1OGsOjCBQs4JAHTPS5Ju8r/G1OsnYo13zFygx1lTd7W+WF0Ronb6Nw3yDYZm0rLtK9fD+eLkx1yX/F7nKwsei1vM=
